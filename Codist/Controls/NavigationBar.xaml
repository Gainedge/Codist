<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:nb="clr-namespace:Codist.NaviBar;assembly=Codist"
	xmlns:c="clr-namespace:Codist.Controls;assembly=Codist"
	xmlns:vsp="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0">
	<Style x:Key="{x:Type nb:CSharpBar}" TargetType="{x:Type nb:CSharpBar}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolBar}">
					<StackPanel CanHorizontallyScroll="True" MaxHeight="22" ClipToBounds="True" Orientation="Horizontal" Background="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}" IsItemsHost="True" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Type nb:MarkdownBar}" TargetType="{x:Type nb:MarkdownBar}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolBar}">
					<StackPanel CanHorizontallyScroll="True" MaxHeight="22" ClipToBounds="True" Orientation="Horizontal" Background="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}" IsItemsHost="True" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Type Separator}" TargetType="{x:Type Separator}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Height" Value="16"/>
		<Setter Property="Margin" Value="0,4,0,3"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderThickness="0,0,0,1" BorderBrush="{DynamicResource VsBrush.CommandBarMenuSeparator}">
						<ContentPresenter Name="Header" Content="{TemplateBinding Tag}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Tag" Value="{x:Null}">
							<Setter TargetName="Header" Property="Visibility" Value="Collapsed"/>
							<Setter Property="Height" Value="1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border Height="16" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource VsBrush.CommandBarMenuSeparator}">
						<ContentPresenter Name="Header" Content="{TemplateBinding Tag}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Tag" Value="{x:Null}">
							<Setter TargetName="Header" Property="Visibility" Value="Collapsed"/>
							<Setter Property="Height" Value="1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- MenuItem Style -->
	<Style x:Key="{x:Type c:ThemedMenuItem}" TargetType="{x:Type c:ThemedMenuItem}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}"/>
		<Setter Property="Foreground" Value="{DynamicResource VsBrush.CommandBarTextInactive}"/>
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!-- TopLevelItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type c:ThemedMenuItem}">
		<Border x:Name="Border" BorderThickness="1">
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
				<ContentPresenter Content="{TemplateBinding MenuItem.Icon}" ContentSource="Icon" Name="Icon" Width="16" Height="16" Margin="3,2,3,2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
				<ContentPresenter RecognizesAccessKey="False" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Margin="0,0,3,0" VerticalAlignment="Center" Grid.Column="1"/>
			</StackPanel>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource VsBrush.FileTabSelectedGradientTop}" />
				<Setter TargetName="Border" Property="BorderThickness" Value="1,0,1,1" />
				<Setter TargetName="Border" Property="Padding" Value="0,1,0,0" />
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource VsBrush.CommandBarMouseOverBackgroundGradient}"/>
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource VsBrush.CommandBarHoverOverSelectedIconBorder}"/>
				<Setter TargetName="Border" Property="BorderThickness" Value="1" />
				<Setter TargetName="Border" Property="Padding" Value="0" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="Gray"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!-- TopLevelHeader -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type c:ThemedMenuItem}">
		<Border x:Name="Border" BorderThickness="1">
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
				<ContentPresenter Content="{TemplateBinding MenuItem.Icon}" ContentSource="Icon" Name="Icon" Width="16" Height="16" Margin="3,2,3,2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
				<ContentPresenter RecognizesAccessKey="False" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Margin="0,0,3,0" VerticalAlignment="Center" Grid.Column="1"/>
				<Popup x:Name="Popup" Placement="Bottom" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" StaysOpen="True">
					<Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1" Background="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}" BorderBrush="{DynamicResource VsBrush.CommandBarMenuBorder}">
						<StackPanel Margin="3">
							<ContentPresenter x:Name="PopupHeader" Content="{TemplateBinding SubMenuHeader}" ContentSource="Tag" Margin="0,0,0,3"/>
							<ScrollViewer x:Name="SubMenuScrollViewer" MaxHeight="{TemplateBinding SubMenuMaxHeight}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
								<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"/>
							</ScrollViewer>
						</StackPanel>
					</Border>
				</Popup>
			</StackPanel>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource VsBrush.CommandBarHoverOverSelectedIconBorder}"/>
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource VsBrush.CommandBarMouseOverBackgroundGradient}"/>
			</Trigger>
			<Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
				<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="Gray"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!-- SubmenuItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type c:ThemedMenuItem}">
		<Border x:Name="Border" BorderThickness="1" Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
					<ColumnDefinition Width="13"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon" Margin="3,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
				<Border x:Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" BorderThickness="1">
					<Path x:Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" Stroke="{DynamicResource VsBrush.CommandBarMenuSubmenuGlyph}"/>
				</Border>
				<ContentPresenter x:Name="HeaderHost" MaxWidth="500" Grid.Column="1" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="False"/>
				<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" MaxWidth="200" Height="{Binding ElementName=HeaderHost,Path=ActualHeight}" TextTrimming="CharacterEllipsis" Margin="5,2,0,2" DockPanel.Dock="Right" VerticalAlignment="Center" Foreground="{DynamicResource VsBrush.GrayText}"/>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="ButtonBase.Command" Value="{x:Null}"/>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vsp:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}" />
			</Trigger>
			<Trigger Property="IsCheckable" Value="true">
				<Setter TargetName="Check" Property="Visibility" Value="Visible"/>
				<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vsp:EnvironmentColors.CommandBarMenuItemMouseOverBrushKey}}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource VsBrush.CommandBarHoverOverSelectedIconBorder}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="Gray"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type c:ThemedMenuItem}">
		<Border x:Name="Border" BorderThickness="1">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
					<ColumnDefinition Width="13"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon" Margin="3,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
				<ContentPresenter x:Name="HeaderHost" Grid.Column="1" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="False" MaxWidth="500"/>
				<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" MaxWidth="200" Height="{Binding ElementName=HeaderHost,Path=ActualHeight}" TextTrimming="CharacterEllipsis" Margin="5,2,0,2" DockPanel.Dock="Right" VerticalAlignment="Center" Foreground="{DynamicResource VsBrush.GrayText}"/>
				<Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{DynamicResource VsBrush.CommandBarMenuSubmenuGlyph}" />
				<Popup x:Name="Popup" Placement="Right" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
					<Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1" Background="{DynamicResource VsBrush.CommandBarMenuBackgroundGradient}" BorderBrush="{DynamicResource VsBrush.CommandBarMenuBorder}">
						<StackPanel Margin="3">
							<ContentPresenter x:Name="PopupHeader" Content="{TemplateBinding SubMenuHeader}" ContentSource="Tag" Margin="0,0,0,3"/>
							<ScrollViewer Name="SubMenuScrollViewer" MaxHeight="{TemplateBinding SubMenuMaxHeight}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
								<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"/>
							</ScrollViewer>
						</StackPanel>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource VsBrush.CommandBarMouseOverBackgroundGradient}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource VsBrush.CommandBarHoverOverSelectedIconBorder}"/>
			</Trigger>
			<Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
				<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="Gray"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
</ResourceDictionary>
